Triangle Twist [10 marks]
----------------------------------------------------------------------

Problem Statement
You will be given 3 lines in X-Y coordinate system. The lines are of the form 
aX+bY+c=0
where a, b & c will be given for all three of them.

Now do the following.

Print the value of slope for all the lines in the given order, rounded off to 2 decimal places. If a line is parallel to Y-axis, print INFINITE
Print YES if these 3 lines can form a triangle, else print NO

Problem-specific Note: 

Assume that the lines are not concurrent.
Two lines are parallel if slope of both of them are equal.
Three lines can form a triangle if none of them are parallel.
For all numbers associated in this question, use double datatype.
Absolute value of a number N can be computed as fabs(N). For this, math.h is already included in your code. 
You can consider two double numbers to be equal if the absolute difference of the two numbers is less than 0.0000001
Do not print extra spaces in the output.
All the outputs should be in separate lines.

----------------------------------------------------------------------
INPUT FORMAT:
a1 b1 c1
a2 b2 c2
a3 b3 c3

OUTPUT FORMAT:
slope1
slope2
slope3
YES/NO
----------------------------------------------------------------------
EXAMPLE:
INPUT:
1 1 1
1 1 0.5
1 1 0.2

OUTPUT:
-1.00
-1.00
-1.00
NO

Explanation: All the three lines have slope equal to -1. Since one or more pair of lines have same slope, these three lines cannot form a triangle. 
----------------------------------------------------------------------
Grading Scheme:
There will be partial grading in this question. There are four lines in your output. Printing each line correctly, in the correct order, carries some weightage. The first, second, and third line each has 10% weightage and the fourth line has 70% weightage. There are 3 visible and 3 hidden test cases.

Please remember, however, that when you press Submit/Evaluate, you will get a green bar only if all parts of your answer are correct. Thus, if your answer is only partly correct, Prutor will say that you have not passed that test case completely, but when we do autograding afterwards, you will get partial marks.
----------------------------------------------------------------------
Words of Caution

Do not forget to submit your code. You can submit multiple times. Only the last submission will be graded.
Marks will be allotted for the following
	

	
Proper and meaningful variable names.
	
Nice looking and consistent indentation.
	
At least a couple of comments explaining to the human grader what are you doing.
	

Solutions that indulge in hard-coding will get a straight zero even if they are passing some test cases.
Questions will be graded by the autograder as well as a human grader.
Proportion of marks allotted to autograder and human grader will be revealed when marks and grading rubrics are released.
You are not allowed to use libraries other than already included in the template code.

=====================
Primary Solution Code
=====================
#include<stdio.h>
#include<math.h>

int isEqual(double a, double b, double thr){
    if(fabs(a - b) < thr){
        return 1;
    }
    return 0;
}

int main()
{
    double a1, b1, c1;
    double a2, b2, c2;
    double a3, b3, c3;
    
    scanf("%lf %lf %lf", &a1, &b1, &c1);
    scanf("%lf %lf %lf", &a2, &b2, &c2);
    scanf("%lf %lf %lf", &a3, &b3, &c3);
    
    // Initializing slope to very large value.
    double slope1 = 1000000000000;
    double slope2 = 1000000000000;
    double slope3 = 1000000000000;
    
    // threshold for equality
    double thr = 0.0000001;
    
    // if denominator is 0, infinite slope.
    // else slope is given by (-a/b)
    
    if(fabs(b1) < thr){
        printf("INFINITE\n");
    }
    else{
        slope1 = -(a1/b1);
        printf("%.2lf\n", slope1);
    }
    
    if(fabs(b2) < thr){
        printf("INFINITE\n");
    }
    else{
        slope2 = -(a2/b2);
        printf("%.2lf\n", slope2);
    }
    
    if(fabs(b3) < thr){
        printf("INFINITE\n");
    }
    else{
        slope3 = -(a3/b3);
        printf("%.2lf\n", slope3);
    }
    
    // Assuming can form a triangle. 
    // Will make it 0 if at least one pair of line is parallel.
    int canFormTriangle = 1;    
    
    // Check equality of slopes.
    if(isEqual(slope1, slope2, thr)) {canFormTriangle = 0;}
    if(isEqual(slope2, slope3, thr)) {canFormTriangle = 0;}
    if(isEqual(slope3, slope1, thr)) {canFormTriangle = 0;}

    if(canFormTriangle){
        printf("YES\n");
    }
    else{
        printf("NO\n");
    }
    return 0;
}
